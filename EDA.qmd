---
title: "EDA"
format: html
editor: visual
---

## Name: Xingwang Yu

## Final project for ST558

# EDA Notebook for Diabetes Health Indicators Dataset

## 1. Introduction

### 1.1 Dataset

Diabetes \_ binary \_ health \_ indicators Dataset is a clean dataset of 253,680 survey responses to the CDC's BRFSS2015. The target variable Diabetes_binary has 2 classes. 0 is for no diabetes, and 1 is for prediabetes or diabetes. This dataset has 21 feature variables which have been reported can influencing diabetes disease and other chronic health conditions based on diabetes disease research.

Among all variables, I tried to select features, which I thought could be important risk factors for diabetes and other chronic illnesses. The selected features from the BRFSS 2015 dataset are:

**Response Variable / Dependent Variable:**

**Diabetes_binary** 0 for no diabetes, 1 for prediabetes.

**Independent Variables:**

**HighBP, High Blood Pressure**

0 = no high BP 1 = high BP

**HighChol, High Cholesterol**

0 = no high cholesterol 1 = high cholesterol

**BMI**

Body Mass Index (BMI)

**Smoking**

Have you smoked at least 100 cigarettes in your entire life? \[Note: 5 packs = 100 cigarettes\] 0 = no 1 = yes

**PhysActivity, Physical Activity**

Adults who reported doing physical activity in past 30 days - not including job 0 = no 1 = yes

**Veggies** Consume Vegetables 1 or more times per day 0 = no 1 = yes

**HvyAlcoholConsump, Alcohol Consumption**

Heavy drinkers (adult men having more than 14 drinks per week and adult women having more than 7 drinks per week) 0 = no 1 = yes

**DiffWalk** Do you have serious difficulty walking or climbing stairs? 0 = no 1 = yes

**Sex** Indicate sex of respondent.

**Age** 13-level age category.

### 1.2 EDA and modeling

Exploratory Data Analysis (EDA) is a crucial step in the data science workflow to process this dataset. The primary purpose of EDA in this project including:

-   **Identify Missing Values**: Determine the extent and pattern of missing data, which helps in deciding how to handle them (e.g., imputation, deletion).

-   **Examine Relationships**: Explore correlations and interactions between variables to uncover potential predictors and multicollinearity issues.

After EDA, we will employ several models for this dataset. The ultimate goal of modeling is to develop a predictive models that accurately captures the relationship between input features (response variables) and the target variable (diabetes here) to make reliable predictions on new, unseen data.

## 2. Get the Data

```{r setup, warning=FALSE}
library(tidyverse)
library(tidyr)
library(ggplot2)
```

First, we read in the data and check the variables via `str()`.

```{r}
df <- read.csv("diabetes_binary_health_indicators_BRFSS2015.csv")
str(df)
```

-   The data includes 253680 observations and 22 varibales.

-   We can note that all the variables are category variables except `BMI`, which is the only one numeric variable.

-   We need to covert the category variables to factors with meaningful names.

## 3. Clean the data

### 3.1 Select variables

Firstly, I will select my interest variables which will be used in hte following investigation, and convert the category variables into factors.

In order to do this part, I referenced the codebook which says what each column/feature/question is: <https://www.cdc.gov/brfss/annual_data/2015/pdf/codebook15_llcp.pdf>

```{r}
diab_df <- df |>
  select(Diabetes_binary, HighBP, HighChol, Smoker, BMI, Veggies, HvyAlcoholConsump, DiffWalk, Sex, Age) |>
  mutate(Diabetes_binary = factor(Diabetes_binary,
                                  levels = c(0, 1),
                                  labels = c("no_diabetes", "prediabetes"))) |>
  mutate(HighBP = factor(HighBP,
                                  levels = c(0, 1),
                                  labels = c("no_high", "high_BP"))) |>
  mutate(HighChol = factor(HighChol,
                                  levels = c(0, 1),
                                  labels = c("no_high_cholesterol", "high_cholesterol"))) |>

  mutate(Smoker = factor(Smoker,
                                  levels = c(0, 1),
                                  labels = c("no", "yes"))) |>
  mutate(Veggies = factor(Veggies,
                                  levels = c(0, 1),
                                  labels = c("no", "yes"))) |>
  mutate(HvyAlcoholConsump = factor(HvyAlcoholConsump,
                                  levels = c(0, 1),
                                  labels = c("no", "yes"))) |>
  mutate(DiffWalk = factor(DiffWalk,
                                  levels = c(0, 1),
                                  labels = c("no", "yes"))) |>
  mutate(Sex = factor(Sex,
                                  levels = c(0, 1),
                                  labels = c("female", "male"))) |>
  mutate(Age = factor(Age,
                                  levels = c(1:13),
                                  labels = c("Age_18_to_24", "Age_25_to_29", "Age_30_to_34", "Age_35_to_39", "Age_40_to_44", "Age_45_to_49", "Age_50_to_54", "Age_55_to_59", "Age_60_to_64", "Age_65_to_69", "Age_70_to_74", "Age_75_to_79", "Age_80_or_older")))

dim(diab_df)
str(diab_df)
```

-   At this point, I got data includes 253680 observations and 10 variables.

### 3.2 Check missing values

```{r}
# check missing value
sum_na <- function(column) {
  sum(is.na(column))
}

na_counts <- diab_df |>
  summarise(across(everything(), sum_na))
na_counts
```

-   There's no missing value data found.

## 4. Summary the data

### 4.1 Covariation between HighBP with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = HighBP)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="blue") 
```

-   From the bubbleplot, we can note that in the group of no diabetes, lager portion of case with no high BP, while high BP dominates the group of prediabetes, suggesting the potential positive relationship between the two variables.

### 4.2 Covariation between HighChol with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = HighChol)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="blue") 
```

-   Similar with HighBP, we can note that in the group of no diabetes, lager portion of case with no high cholesterol, while high cholesterol dominates the group of prediabetes, suggesting the potential positive relationship between the two variables.

### 4.3 Covariation between Smoker with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = Smoker)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="blue") 
```

-   From the bubbleplot, we can note that in the group of no diabetes, lager portion of case with non smoker, while in the group of prediabetes, there are more smoker than non smoker, suggesting the potential positive relationship between the two variables.

### 4.4 Covariation between BMI with Diabetes_binary

```{r}
ggplot(diab_df, aes(x = Diabetes_binary, y = BMI)) +
  geom_boxplot()
```

-   The boxplot showed that the media value of BMI in prediabetes group is bigger than no diabetes group.

### 4.5 Covariation between Veggies with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = Veggies)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="red") 
```

-   Veggies case dominate both no diabetes and prediabetes groups, so the two variables do not show significant correlation.

### 4.6 Covariation between HvyAlcoholConsump with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = HvyAlcoholConsump)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="red") 
```

-   Similar with previous Veggies, HvyAlcoholConsump did not increase the occurrence of prediabetes.

### 4.7 Covariation between DiffWalk with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = DiffWalk)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="blue") 
```

-   We can note that in no diabetes group, most case do not have diffwalk, while in prediabetes, the portion of diffwalk increased, but still less than no-diffwalk samples.

### 4.8 Covariation between Sex with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = Sex)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="blue") 
```

-   The plot indicates that the female dominates no diabetes group, while the portion of male increased in prediabetes group, which is almost half to half with female cases.

### 4.9 Covariation between Age with Diabetes_binary

```{r}
ggplot(data = diab_df, aes(x = Diabetes_binary, y = Age)) +
  geom_count(aes(size=..prop.., group=Diabetes_binary), colour="blue") 
```

-   In general, as age getting bigger, the portion getting bigger first and then decreased in both diabetes groups. However, compared to no diabetes group, the younger people have less portion in prediabetes group, and the largest portion showed in age 65-69.

Based on the covariation analysis, some vairables do not show significant relationship with target variable. We will drop them in following modeling analysis, including Veggies, HvyAlcoholConsump and DiffWalk.

```{r}
diab_df <- df |>
  select(Diabetes_binary, HighBP, HighChol, Smoker, BMI, Sex, Age) |>
  mutate(Diabetes_binary = factor(Diabetes_binary,
                                  levels = c(0, 1),
                                  labels = c("no_diabetes", "prediabetes"))) |>
  mutate(HighBP = factor(HighBP,
                                  levels = c(0, 1),
                                  labels = c("no_high", "high_BP"))) |>
  mutate(HighChol = factor(HighChol,
                                  levels = c(0, 1),
                                  labels = c("no_high_cholesterol", "high_cholesterol"))) |>

  mutate(Smoker = factor(Smoker,
                                  levels = c(0, 1),
                                  labels = c("no", "yes"))) |>

  mutate(Sex = factor(Sex,
                                  levels = c(0, 1),
                                  labels = c("female", "male"))) |>
  mutate(Age = factor(Age,
                                  levels = c(1:13),
                                  labels = c("Age_18_to_24", "Age_25_to_29", "Age_30_to_34", "Age_35_to_39", "Age_40_to_44", "Age_45_to_49", "Age_50_to_54", "Age_55_to_59", "Age_60_to_64", "Age_65_to_69", "Age_70_to_74", "Age_75_to_79", "Age_80_or_older")))
```
